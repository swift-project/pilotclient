--- 440/SimConnect.h	2018-11-30 01:28:11.911201100 +0100
+++ 410/SimConnect.h	2018-11-30 01:28:11.843240300 +0100
@@ -168,8 +168,6 @@
     SIMCONNECT_RECV_ID_MOBILE_SCENERY_IN_RADIUS,
     SIMCONNECT_RECV_ID_MOBILE_SCENERY_DATA,
     SIMCONNECT_RECV_ID_EVENT_64,
-    SIMCONNECT_RECV_ID_EVENT_TEXT,
-    SIMCONNECT_RECV_ID_EVENT_TEXT_DESTROYED,
 };
 
 
@@ -298,11 +296,6 @@
     SIMCONNECT_MISSION_SUCCEEDED
 };
 
-enum SIMCONNECT_TEXT_ORIGIN {
-   SIMCONNECT_TEXT_ORIGIN_APPLICATION,
-   SIMCONNECT_TEXT_ORIGIN_SIMCONNECT,
-};
-
 enum SIMCONNECT_TEXT_TYPE {
     SIMCONNECT_TEXT_TYPE_SCROLL_BLACK,
     SIMCONNECT_TEXT_TYPE_SCROLL_WHITE,
@@ -369,7 +362,6 @@
     SIMCONNECT_CAMERA_TYPE_WORLD_OBJECT,
     SIMCONNECT_CAMERA_TYPE_LATLONALT_ORTHOGONAL,
     SIMCONNECT_CAMERA_TYPE_OBJECT_AI_VIRTUAL,
-    SIMCONNECT_CAMERA_TYPE_OBJECT_AI_CENTER,
 };
 
 typedef DWORD SIMCONNECT_EVENT_SUBSCRIPTION_FLAG;
@@ -393,6 +385,7 @@
 
     static const DWORD SIMCONNECT_WAYPOINT_NONE                    = 0x00;
     static const DWORD SIMCONNECT_WAYPOINT_SPEED_REQUESTED         = 0x04;    // requested speed at waypoint is valid
+    static const DWORD SIMCONNECT_WAYPOINT_THROTTLE_REQUESTED      = 0x08;    // request a specific throttle percentage
     static const DWORD SIMCONNECT_WAYPOINT_COMPUTE_VERTICAL_SPEED  = 0x10;    // compute vertical to speed to reach waypoint altitude when crossing the waypoint
     static const DWORD SIMCONNECT_WAYPOINT_ALTITUDE_IS_AGL         = 0x20;    // AltitudeIsAGL
     static const DWORD SIMCONNECT_WAYPOINT_ON_GROUND               = 0x00100000;   // place this waypoint on the ground
@@ -759,23 +752,6 @@
 	DWORD   dwFlags;
 };
 
-struct SIMCONNECT_RECV_EVENT_TEXT : public SIMCONNECT_RECV_EVENT_BASE
-{
-    SIMCONNECT_TEXT_TYPE eTextType;
-    SIMCONNECT_TEXT_ORIGIN eOrigin;
-    float fDuration;
-    DWORD dwFlags;
-    DWORD dwUnitSize;
-    BYTE rgMessage[1];
-};
-
-struct SIMCONNECT_RECV_EVENT_TEXT_DESTROYED : public SIMCONNECT_RECV_EVENT_BASE
-{
-    SIMCONNECT_TEXT_TYPE eTextType;
-    SIMCONNECT_TEXT_RESULT eTextResult;
-    DWORD dwFlags;
-};
-
 // SIMCONNECT_DATA_OBJECT_DAMAGED_BY_WEAPON
 struct SIMCONNECT_DATA_OBJECT_DAMAGED_BY_WEAPON
 {
@@ -1235,7 +1211,7 @@
     double          Altitude;   // feet   
     unsigned long   Flags;
     double          ktsSpeed;   // knots
-    double          Unused;
+    double          percentThrottle;
 };
 
 // SIMCONNECT_DATA_OBSERVER
@@ -1553,7 +1529,7 @@
 SIMCONNECTAPI SimConnect_RequestLandingTriggerLandingInfoByIndex(HANDLE hSimConnect, SIMCONNECT_DATA_REQUEST_ID RequestID, const GUID landingTriggerInstanceID, int landingIndex);
 SIMCONNECTAPI SimConnect_RequestSessionDuration(HANDLE hSimConnect, SIMCONNECT_DATA_REQUEST_ID RequestID);
 SIMCONNECTAPI SimConnect_RequestAttachPointData(HANDLE hSimConnect, SIMCONNECT_DATA_REQUEST_ID RequestID, DWORD dwObjectID, const char * szAttachPointName, BOOL bRequestWorldCoordinates = FALSE);
-SIMCONNECTAPI SimConnect_PlaybackRecording(HANDLE hSimConnect, const char * szFileName, int bookmarkIndex, double endTimeInSeconds, BOOL bDisplayPlaybackCompleteDialog = TRUE);
+SIMCONNECTAPI SimConnect_PlaybackRecording(HANDLE hSimConnect, const char * szFileName, int bookmarkIndex, double endTimeInSeconds);
 SIMCONNECTAPI SimConnect_StartRecorder(HANDLE hSimConnect);
 SIMCONNECTAPI SimConnect_StopRecorderAndSaveRecording(HANDLE hSimConnect, const char * szTitle, const char * szDescription, BOOL promptUser);
 SIMCONNECTAPI SimConnect_RequestRecordingInfo(HANDLE hSimConnect, SIMCONNECT_DATA_REQUEST_ID RequestID, const char * szFileName);
