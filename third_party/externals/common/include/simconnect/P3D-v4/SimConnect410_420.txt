--- 410/SimConnect.h	2018-11-30 01:28:11.843240300 +0100
+++ 420/SimConnect.h	2018-11-30 01:28:11.874222600 +0100
@@ -168,6 +168,7 @@
     SIMCONNECT_RECV_ID_MOBILE_SCENERY_IN_RADIUS,
     SIMCONNECT_RECV_ID_MOBILE_SCENERY_DATA,
     SIMCONNECT_RECV_ID_EVENT_64,
+    SIMCONNECT_RECV_ID_EVENT_TEXT,
 };
 
 
@@ -296,6 +297,11 @@
     SIMCONNECT_MISSION_SUCCEEDED
 };
 
+enum SIMCONNECT_TEXT_ORIGIN {
+   SIMCONNECT_TEXT_ORIGIN_APPLICATION,
+   SIMCONNECT_TEXT_ORIGIN_SIMCONNECT,
+};
+
 enum SIMCONNECT_TEXT_TYPE {
     SIMCONNECT_TEXT_TYPE_SCROLL_BLACK,
     SIMCONNECT_TEXT_TYPE_SCROLL_WHITE,
@@ -362,6 +368,7 @@
     SIMCONNECT_CAMERA_TYPE_WORLD_OBJECT,
     SIMCONNECT_CAMERA_TYPE_LATLONALT_ORTHOGONAL,
     SIMCONNECT_CAMERA_TYPE_OBJECT_AI_VIRTUAL,
+    SIMCONNECT_CAMERA_TYPE_OBJECT_AI_CENTER,
 };
 
 typedef DWORD SIMCONNECT_EVENT_SUBSCRIPTION_FLAG;
@@ -385,7 +392,6 @@
 
     static const DWORD SIMCONNECT_WAYPOINT_NONE                    = 0x00;
     static const DWORD SIMCONNECT_WAYPOINT_SPEED_REQUESTED         = 0x04;    // requested speed at waypoint is valid
-    static const DWORD SIMCONNECT_WAYPOINT_THROTTLE_REQUESTED      = 0x08;    // request a specific throttle percentage
     static const DWORD SIMCONNECT_WAYPOINT_COMPUTE_VERTICAL_SPEED  = 0x10;    // compute vertical to speed to reach waypoint altitude when crossing the waypoint
     static const DWORD SIMCONNECT_WAYPOINT_ALTITUDE_IS_AGL         = 0x20;    // AltitudeIsAGL
     static const DWORD SIMCONNECT_WAYPOINT_ON_GROUND               = 0x00100000;   // place this waypoint on the ground
@@ -752,6 +758,16 @@
 	DWORD   dwFlags;
 };
 
+struct SIMCONNECT_RECV_EVENT_TEXT : public SIMCONNECT_RECV_EVENT_BASE
+{
+    SIMCONNECT_TEXT_TYPE eTextType;
+    SIMCONNECT_TEXT_ORIGIN eOrigin;
+    float fDuration;
+    DWORD dwFlags;
+    DWORD dwUnitSize;
+    BYTE rgMessage[1];
+};
+
 // SIMCONNECT_DATA_OBJECT_DAMAGED_BY_WEAPON
 struct SIMCONNECT_DATA_OBJECT_DAMAGED_BY_WEAPON
 {
@@ -1211,7 +1227,7 @@
     double          Altitude;   // feet   
     unsigned long   Flags;
     double          ktsSpeed;   // knots
-    double          percentThrottle;
+    double          Unused;
 };
 
 // SIMCONNECT_DATA_OBSERVER
